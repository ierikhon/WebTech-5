class Figure {
    constructor(matr1, matr2, matr3, matr4) {
        this.color = '#00FF00';
        this.positions = [matr1, matr2, matr3, matr4];
        this.x = 0;
        this.y = 0;
        this.matrixID = 0;
    }

    rotate(side)
    {
        if (side === 'Left')
            this.matrixID = --this.matrixID % 4;
        else this.matrixID = ++this.matrixID % 4;
    }

    get matrix ()
    {
        return this.positions[this.matrixID];
    }

    static makeFigure ()
    {
       let figureType =  Math.floor(Math.random() * 7);
       switch (figureType)
       {
           case 0:
               return new Figure([[1,1,0,0],[1,1,0,0],[0,0,0,0],[0,0,0,0]],
                                 [[1,1,0,0],[1,1,0,0],[0,0,0,0],[0,0,0,0]],
                                 [[1,1,0,0],[1,1,0,0],[0,0,0,0],[0,0,0,0]],
                                 [[1,1,0,0],[1,1,0,0],[0,0,0,0],[0,0,0,0]]);
           case 1:
               return new Figure([[0,0,0,0],[1,1,1,1],[0,0,0,0],[0,0,0,0]],
                                 [[0,0,1,0],[0,0,1,0],[0,0,1,0],[0,0,1,0]],
                                 [[0,0,0,0],[0,0,0,0],[1,1,1,1],[0,0,0,0]],
                                 [[0,1,0,0],[0,1,0,0],[0,1,0,0],[0,1,0,0]]);
           case 2:
               return new Figure([[0,1,0,0],[0,1,0,0],[1,1,0,0],[0,0,0,0]],
                                 [[1,0,0,0],[1,1,1,0],[0,0,0,0],[0,0,0,0]],
                                 [[0,1,1,0],[0,1,0,0],[0,1,0,0],[0,0,0,0]],
                                 [[0,0,0,0],[1,1,1,0],[0,0,1,0],[0,0,0,0]]);
           case 3:
               return new Figure([[0,1,0,0],[0,1,0,0],[0,1,1,0],[0,0,0,0]],
                                 [[0,0,0,0],[1,1,1,0],[1,0,0,0],[0,0,0,0]],
                                 [[1,1,0,0],[0,1,0,0],[0,1,0,0],[0,0,0,0]],
                                 [[0,0,1,0],[1,1,1,0],[0,0,0,0],[0,0,0,0]]);
           case 4:
               return new Figure([[0,0,0,0],[0,1,1,0],[1,1,0,0],[0,0,0,0]],
                                 [[1,0,0,0],[1,1,0,0],[0,1,0,0],[0,0,0,0]],
                                 [[0,1,1,0],[1,1,0,0],[0,0,0,0],[0,0,0,0]],
                                 [[0,1,0,0],[0,1,1,0],[0,0,1,0],[0,0,0,0]]);
           case 5:
               return new Figure([[0,0,0,0],[1,1,1,0],[0,1,0,0],[0,0,0,0]],
                                 [[0,1,0,0],[1,1,0,0],[0,1,0,0],[0,0,0,0]],
                                 [[0,1,0,0],[1,1,1,0],[0,0,0,0],[0,0,0,0]],
                                 [[0,1,0,0],[0,1,1,0],[0,1,0,0],[0,0,0,0]]);
           case 6:
               return new Figure([[0,0,0,0],[1,1,0,0],[0,1,1,0],[0,0,0,0]],
                                 [[0,1,0,0],[1,1,0,0],[1,0,0,0],[0,0,0,0]],
                                 [[1,1,0,0],[0,1,1,0],[0,0,0,0],[0,0,0,0]],
                                 [[0,0,1,0],[0,1,1,0],[0,1,0,0],[0,0,0,0]]);
       }
    }
}